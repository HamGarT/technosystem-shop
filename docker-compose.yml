version: "3.9"

services:
  api:
    build: ./api
    container_name: api
    ports:
      - "8000:8000"
    volumes:
      - ./api:/var/www/html
    environment:
      APP_ENV: ${APP_ENV:-local}
      APP_DEBUG: ${APP_DEBUG:-true}
      APP_KEY: ${APP_KEY}
      APP_URL: ${APP_URL:-http://localhost:8000}
      DB_CONNECTION: pgsql
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE:-technosystemdb}
      DB_USERNAME: ${DB_USERNAME:-techuser}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
  web:
    build: ./web
    container_name: web
    ports:
      - "3000:3000"
    stdin_open: true
    tty: true
    volumes:
      - ./web:/app
      - /app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - VITE_API_URL=${VITE_API_URL:-http://api:8000}
      - VITE_API_KEY=${VITE_API_KEY}
      - VITE_ENV=${VITE_ENV:-development}
    depends_on:
      - api
    networks:
      - app-network

  admin:
    build: ./admin
    container_name: admin
    ports:
      - "3001:3000"
    stdin_open: true
    tty: true
    volumes:
      - ./admin:/app
      - /app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - VITE_API_URL=${VITE_API_URL:-http://api:8000}
      - VITE_API_KEY=${VITE_API_KEY}
      - VITE_ENV=${VITE_ENV:-development}
    depends_on:
      - api
    networks:
      - app-network

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USERNAME:-techuser}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE:-technosystemdb}
    volumes:
      - pg_data:/var/lib/postgresql
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-techuser}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      SCRIPT_NAME: /pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

volumes:
  pg_data:

networks:
  app-network:
    driver: bridge